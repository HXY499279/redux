{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count/index'; //引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux'; //count函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\n//因为count函数是react-redux调用的\n\nfunction count(state) {\n  return {\n    n: state\n  };\n} //b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\n\n\nfunction b() {\n  return {\n    jia: () => {\n      console.log(this.props);\n    }\n  };\n} //使用connect()()创建并暴露一个Count的容器组件,connect函数需要传递两个参数，这两个参数的类型是函数，第一个参数是状态，第二个参数是操作状态的方法\n\n\nexport default connect(count, b)(CountUI);","map":{"version":3,"sources":["D:/code/reduxtest/src/containers/Count/index.jsx"],"names":["CountUI","connect","count","state","n","b","jia","console","log","props"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,8BAApB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;;AACA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACnB,SAAO;AAACC,IAAAA,CAAC,EAACD;AAAH,GAAP;AACH,C,CACD;;;AACA,SAASE,CAAT,GAAc;AACV,SAAO;AAACC,IAAAA,GAAG,EAAC,MAAM;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAAwB;AAApC,GAAP;AACH,C,CACD;;;AACA,eAAeR,OAAO,CAACC,KAAD,EAAOG,CAAP,CAAP,CAAiBL,OAAjB,CAAf","sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count/index'\r\n\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\n//count函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\r\n//因为count函数是react-redux调用的\r\nfunction count (state) {\r\n    return {n:state}\r\n}\r\n//b函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\r\nfunction b () {\r\n    return {jia:() => {console.log(this.props)}}\r\n}\r\n//使用connect()()创建并暴露一个Count的容器组件,connect函数需要传递两个参数，这两个参数的类型是函数，第一个参数是状态，第二个参数是操作状态的方法\r\nexport default connect(count,b)(CountUI)\r\n"]},"metadata":{},"sourceType":"module"}