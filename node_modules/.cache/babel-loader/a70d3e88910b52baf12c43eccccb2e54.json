{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\reduxtest\\\\src\\\\containers\\\\Person\\\\Person.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { nanoid } from 'nanoid';\nimport { connect } from 'react-redux';\nimport { addPerson } from '../../redux/actions/person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Person extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addPerson = () => {\n      const {\n        name\n      } = this.nameElem;\n      const {\n        age\n      } = this.ageElem;\n      const personObj = {\n        id: nanoid(),\n        name,\n        age\n      };\n\n      if (name !== '' || age != '') {\n        this.props.addPerson(personObj);\n      }\n\n      this.nameElem.value = '';\n      this.ageElem.value = '';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u6211\\u662FPerson\\u7EC4\\u4EF6,\\u4E0A\\u65B9\\u7EC4\\u4EF6\\u6C42\\u548C\\u4E3A:\", this.props.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: input => {\n          this.nameElem = input;\n        },\n        placeholder: \"\\u8F93\\u5165\\u540D\\u5B57\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: input => {\n          this.ageElem = input;\n        },\n        placeholder: \"\\u8F93\\u5165\\u5E74\\u9F84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addPerson,\n        children: \"\\u6DFB\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.persons.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u59D3\\u540D:\", item.name, \"  \\u5E74\\u9F84:\", item.age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  persons: state.persons,\n  count: state.count\n}), {\n  addPerson\n})(Person);","map":{"version":3,"sources":["D:/code/reduxtest/src/containers/Person/Person.jsx"],"names":["React","Component","Fragment","nanoid","connect","addPerson","Person","name","nameElem","age","ageElem","personObj","id","props","value","render","count","input","persons","map","item","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,4BAA1B;;;AAGA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BI,SAF2B,GAEf,MAAM;AACd,YAAM;AAAEE,QAAAA;AAAF,UAAW,KAAKC,QAAtB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAU,KAAKC,OAArB;AACA,YAAMC,SAAS,GAAG;AAACC,QAAAA,EAAE,EAACT,MAAM,EAAV;AAAaI,QAAAA,IAAb;AAAkBE,QAAAA;AAAlB,OAAlB;;AACA,UAAIF,IAAI,KAAK,EAAT,IAAeE,GAAG,IAAI,EAA1B,EAA8B;AAC1B,aAAKI,KAAL,CAAWR,SAAX,CAAqBM,SAArB;AACH;;AACD,WAAKH,QAAL,CAAcM,KAAd,GAAsB,EAAtB;AACA,WAAKJ,OAAL,CAAaI,KAAb,GAAqB,EAArB;AACH,KAX0B;AAAA;;AAa3BC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA,iGAAwB,KAAKF,KAAL,CAAWG,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAEC,KAAK,IAAI;AAAE,eAAKT,QAAL,GAAgBS,KAAhB;AAAuB,SAA1D;AAA4D,QAAA,WAAW,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAEA,KAAK,IAAI;AAAE,eAAKP,OAAL,GAAeO,KAAf;AAAsB,SAA3D;AAA6D,QAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKZ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBACK,KAAKQ,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuBC,IAAI,IAAI;AAC5B,8BACI;AAAA,wCAAQA,IAAI,CAACb,IAAb,qBAAwBa,IAAI,CAACX,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA7B0B;;AAgC/B,eAAeL,OAAO,CAClBiB,KAAK,KAAK;AACNH,EAAAA,OAAO,EAAEG,KAAK,CAACH,OADT;AAENF,EAAAA,KAAK,EAAEK,KAAK,CAACL;AAFP,CAAL,CADa,EAKlB;AACIX,EAAAA;AADJ,CALkB,CAAP,CAQbC,MARa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport { connect } from 'react-redux'\r\nimport { addPerson } from '../../redux/actions/person'\r\n\r\n\r\nclass Person extends Component {\r\n\r\n    addPerson = () => {\r\n        const { name } = this.nameElem\r\n        const { age } = this.ageElem\r\n        const personObj = {id:nanoid(),name,age}\r\n        if (name !== '' || age != '') {\r\n            this.props.addPerson(personObj)\r\n        }\r\n        this.nameElem.value = ''\r\n        this.ageElem.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>我是Person组件,上方组件求和为:{this.props.count} </h1>\r\n                <input type=\"text\" ref={input => { this.nameElem = input }} placeholder=\"输入名字\" />\r\n                <input type=\"number\" ref={input => { this.ageElem = input }} placeholder=\"输入年龄\" />\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                    {this.props.persons.map(item => {\r\n                        return (\r\n                            <li>姓名:{item.name}  年龄:{item.age}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        persons: state.persons,\r\n        count: state.count\r\n    }),\r\n    {\r\n        addPerson\r\n    }\r\n)(Person)"]},"metadata":{},"sourceType":"module"}