{"ast":null,"code":"/*\r\n    1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n    2.reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\r\n*/\nconst initState = 0;\nexport default function countReducer(preState = initState, action) {\n  // 从action对象中获取：type，data\n  const {\n    type,\n    data\n  } = action; //根据type决定如何加工数据\n\n  switch (type) {\n    case 'increment':\n      return preState + data;\n\n    case 'decrement':\n      return preState - data;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"sources":["D:/code/reduxtest/src/redux/count_reducer.js"],"names":["initState","countReducer","preState","action","type","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,CAAlB;AACA,eAAe,SAASC,YAAT,CAAsBC,QAAQ,GAAGF,SAAjC,EAA4CG,MAA5C,EAAoD;AAC/D;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBF,MAAvB,CAF+D,CAG/D;;AACA,UAAQC,IAAR;AACI,SAAK,WAAL;AACI,aAAOF,QAAQ,GAAGG,IAAlB;;AACJ,SAAK,WAAL;AACI,aAAOH,QAAQ,GAAGG,IAAlB;;AAEJ;AACI,aAAOH,QAAP;AAPR;AASH","sourcesContent":["/*\r\n    1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n    2.reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\r\n*/\r\nconst initState = 0\r\nexport default function countReducer(preState = initState, action) {\r\n    // 从action对象中获取：type，data\r\n    const { type, data } = action\r\n    //根据type决定如何加工数据\r\n    switch (type) {\r\n        case 'increment':\r\n            return preState + data\r\n        case 'decrement':\r\n            return preState - data\r\n\r\n        default:\r\n            return preState\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}