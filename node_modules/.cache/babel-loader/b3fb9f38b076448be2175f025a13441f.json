{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count/index'; //引入action\n\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from \"../../redux/count_action\"; //引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux'; // // 映射状态\n// const mapStateToProps = state => ({ count: state })\n// // 映射操作状态的方法\n// const mapDispatchToProps = dispatch => (\n//     {\n//         jia: (number) => { dispatch(createIncrementAction(number)) },\n//         jian: (number) => { dispatch(createDecrementAction(number)) },\n//         asyncjia: (number, time) => { dispatch(createIncrementAsyncAction(number, time)) }\n//     }\n// )\n//使用connect()()创建并暴露一个Count的容器组件,connect函数需要传递两个参数，这两个参数的类型是函数，第一个参数是状态，第二个参数是操作状态的方法\n\nexport default connect(state => ({\n  count: state\n}), {\n  jia: createIncrementAction,\n  jian: createDecrementAction,\n  asyncjia: createIncrementAsyncAction\n})(CountUI);","map":{"version":3,"sources":["D:/code/reduxtest/src/containers/Count/index.jsx"],"names":["CountUI","createIncrementAction","createDecrementAction","createIncrementAsyncAction","connect","state","count","jia","jian","asyncjia"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,8BAApB,C,CACA;;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,0BAAvD,QAAyF,0BAAzF,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeA,OAAO,CAClBC,KAAK,KAAK;AAAEC,EAAAA,KAAK,EAAED;AAAT,CAAL,CADa,EAElB;AACIE,EAAAA,GAAG,EAAEN,qBADT;AAEIO,EAAAA,IAAI,EAAEN,qBAFV;AAGIO,EAAAA,QAAQ,EAAEN;AAHd,CAFkB,CAAP,CAObH,OAPa,CAAf","sourcesContent":["//引入Count的UI组件\r\nimport CountUI from '../../components/Count/index'\r\n//引入action\r\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from \"../../redux/count_action\"\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\n// // 映射状态\r\n// const mapStateToProps = state => ({ count: state })\r\n\r\n// // 映射操作状态的方法\r\n// const mapDispatchToProps = dispatch => (\r\n//     {\r\n//         jia: (number) => { dispatch(createIncrementAction(number)) },\r\n//         jian: (number) => { dispatch(createDecrementAction(number)) },\r\n//         asyncjia: (number, time) => { dispatch(createIncrementAsyncAction(number, time)) }\r\n//     }\r\n// )\r\n//使用connect()()创建并暴露一个Count的容器组件,connect函数需要传递两个参数，这两个参数的类型是函数，第一个参数是状态，第二个参数是操作状态的方法\r\nexport default connect(\r\n    state => ({ count: state }),\r\n    {\r\n        jia: createIncrementAction,\r\n        jian: createDecrementAction,\r\n        asyncjia: createIncrementAsyncAction\r\n    }\r\n)(CountUI)\r\n"]},"metadata":{},"sourceType":"module"}