{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","this","personCount","ref","c","onClick","Component","connect","state","persons","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","input","placeholder","map","item","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ac323af6.chunk.js","sourcesContent":["/*\r\n    该模块是用于定义action对象中type类型的常量值，目的只有一个：便于管理的同时防止程序员单词写错\r\n*/\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","/*\r\n    该文件专门为Count组件生成action对象\r\n*/\r\nimport { INCREMENT, DECREMENT } from '../constant'\r\n\r\n//同步action，就是指action的值为Object类型的一般对象\r\nexport const increment = data => ({type:INCREMENT,data})\r\nexport const decrement = data => ({type:DECREMENT,data})\r\n\r\n//异步action，就是指action的值为函数,异步action中一般都会调用同步action，异步action不是必须要用的\r\nexport const incrementAsync = (data,time) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(increment(data))\r\n        }, time);\r\n    }\r\n}","//引入action\r\nimport { increment, decrement, incrementAsync } from \"../../redux/actions/count\"\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\n\r\n// 定义UI组件\r\nclass Count extends Component {\r\n\r\n    //加法\r\n    increment = () => {\r\n        const { value } = this.selectNumber\r\n        this.props.increment(value * 1)\r\n    }\r\n    //减法\r\n    decrement = () => {\r\n        const { value } = this.selectNumber\r\n        this.props.decrement(value * 1)\r\n\r\n    }\r\n    //奇数再加\r\n    incrementIfOdd = () => {\r\n        const { value } = this.selectNumber\r\n        if (this.props.count % 2 !== 0) {\r\n            this.props.increment(value * 1)\r\n        }\r\n\r\n    }\r\n    //异步再加\r\n    incrementAsync = () => {\r\n        const { value } = this.selectNumber\r\n        this.props.incrementAsync(value*1,500)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Count组件,下方组件总人数为：{this.props.personCount} </h2>\r\n                <h4>当前求和为：{this.props.count}</h4>\r\n                <select ref={c => this.selectNumber = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>&nbsp;&nbsp;\r\n                <button onClick={this.increment}>+</button>&nbsp;&nbsp;\r\n                <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;&nbsp;\r\n                <button onClick={this.incrementAsync}>异步加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(\r\n    state => ({ count: state.count,personCount:state.persons.length }),\r\n    {\r\n        increment,\r\n        decrement,\r\n        incrementAsync\r\n    }\r\n)(Count)\r\n","import React, { Component } from 'react'\r\nimport { nanoid } from 'nanoid';\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\nimport { addPerson } from '../../redux/actions/person'\r\n\r\n\r\nclass Person extends Component {\r\n\r\n    addPerson = () => {\r\n        const name = this.nameNode.value\r\n        const age = this.ageNode.value\r\n        const personObj = { id: nanoid(), name, age }\r\n        if (name !== '' && age !== '') {\r\n            this.props.addPerson(personObj)\r\n        }\r\n        this.nameNode.value = ''\r\n        this.ageNode.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>我是Person组件，上方组件求和为：{this.props.count}</h2>\r\n                <input ref={input => this.nameNode = input} type=\"text\" placeholder=\"输入名字\" />\r\n                <input ref={input => this.ageNode = input} type=\"text\" placeholder=\"输入年龄\" />\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <ul>\r\n                    {this.props.persons.map((item) => {\r\n                        return (<li key={item.id}>{item.name}---{item.age}</li>)\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        persons: state.persons,\r\n        count: state.count\r\n    }),\r\n    {\r\n        addPerson\r\n    }\r\n)(Person)\r\n","import { ADD_PERSON } from '../constant'\r\n\r\nexport const addPerson = personObj => ({type:ADD_PERSON,data:personObj})","import React, { Component } from 'react'\r\n//引入容器组件\r\nimport Count from './containers/Count/index'\r\nimport Person from './containers/Person/index'\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Count/>\r\n                <hr />\r\n                <Person/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import {ADD_PERSON} from '../constant'\r\n\r\n//初始化人的列表\r\nconst initState = [{id:'001',name:'tom',age:18}]\r\n\r\nexport default function personReducer(preState = initState , action) {\r\n    const {type,data} = action\r\n    switch (type) {\r\n        case ADD_PERSON://若是添加一个人\r\n            //preState.unshit(data) //此处不可以这样写，这样会导致preState被改写了，personReducer就不是纯函数了\r\n            return [data,...preState]\r\n        default:\r\n            return preState\r\n    }\r\n\r\n}","/* \r\n    该文件用于汇总所有的reducer为一个总的reducer\r\n*/\r\nimport { combineReducers } from 'redux'\r\n//引入为Count组件服务的reducer\r\nimport count from './count';\r\n//引入为Person组件服务的reducer\r\nimport persons from './person';\r\n\r\n//汇总reducer\r\nexport default combineReducers({\r\n    count,\r\n    persons\r\n})\r\n","/*\r\n    1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n    2.reducer函数会接到两个参数，分别为：之前的状态（preState），动作对象（action）\r\n*/\r\nimport { INCREMENT, DECREMENT } from '../constant'\r\n\r\nconst initState = 0 //初始化状态\r\nexport default function countReducer(preState = initState, action) {\r\n    // 从action对象中获取：type，data\r\n    const { type, data } = action\r\n    //根据type决定如何加工数据\r\n    switch (type) {\r\n        case INCREMENT://如果是加\r\n            return preState + data\r\n        case DECREMENT://如果是减\r\n            return preState - data\r\n        default:\r\n            return preState\r\n    }\r\n}","/*\r\n该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n//引入createStore,专门用于创建redux中最为核心的store对象\r\nimport { createStore, applyMiddleware } from 'redux';\r\n//引入汇总之后的reducer\r\nimport reducer from './reducers/index'\r\n//引入redux-thunk，用于支持异步action。因为异步action返回值为一个函数，而store只接收对象类型的action，所以需要引入中间件调用函数得到函数里面的对象action\r\nimport thunk from 'redux-thunk';\r\n//引入redux-devtools-extension\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n//暴露store \r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  \n  <Provider store={store} >\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}